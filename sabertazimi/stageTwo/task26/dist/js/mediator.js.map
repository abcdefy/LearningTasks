{"version":3,"sources":["mediator.js"],"names":["mediator","global","doc","undef","orbits","subUid","subscribe","orbit","func","token","toString","push","context","this","callback","publish","args","len","Array","prototype","slice","call","arguments","length","i","subscription","apply","unsubscribe","m","j","splice","window","document"],"mappings":"AAGA,GAAIA,UAAY,SAAWC,EAAQC,EAAKC,GACpC,GAAIC,MACAC,EAAS,GAETC,EAAY,SAAUC,EAAOC,GACzB,GAAIC,EAeJ,OAbKL,GAAOG,KACRH,EAAOG,OAIXE,KAAWJ,GAAQK,WACnBN,EAAOG,GAAOI,MACVC,QAASC,KACTN,MAAOA,EACPE,MAAOA,EACPK,SAAUN,IAGPC,GAEXM,EAAU,SAAUR,GAChB,GAAIS,GACAC,CAGJ,KAAKb,EAAOG,GACR,OAAO,CAGXS,GAAOE,MAAMC,UAAUC,MAAMC,KAAKC,WAClCL,EAAMb,EAAOG,GAAOgB,MAEpB,KAAK,GAAIC,GAAI,EAAMP,EAAJO,EAAQA,IAAK,CACxB,GAAIC,GAAerB,EAAOG,GAAOiB,EACjCC,GAAaX,SAASY,MAAMD,EAAab,QAASI,GAItD,MAAOH,OAEXc,EAAc,SAAUlB,GACpB,IAAK,GAAImB,KAAKxB,GACV,GAAIA,EAAOwB,GACP,IAAK,GAAIJ,GAAI,EAAGK,EAAIzB,EAAOwB,GAAGL,OAAYM,EAAJL,EAAOA,IACzC,GAAIpB,EAAOwB,GAAGJ,GAAGf,QAAUA,EAEvB,MADAL,GAAOwB,GAAGE,OAAON,EAAG,GACbf,CAKvB,QAAO,EAGX,QACIH,UAAWA,EACXS,QAASA,EACTY,YAAaA,IAEvBI,OAAQC","file":"mediator.js","sourcesContent":["/**\n * mediator - 中介者，负责传送指令\n */\nvar mediator = (function ( global, doc, undef ) {\n    var orbits = {},\n        subUid = -1,\n\n        subscribe = function (orbit, func ) {\n            var token;\n\n            if (!orbits[orbit]) {\n                orbits[orbit] = [];\n            }\n\n    \t\t// add observer to observerlist(orbits)\n            token = (++subUid).toString();\n            orbits[orbit].push({\n                context: this,\n                orbit: orbit,\n                token: token,\n                callback: func\n            });\n\n            return token;\n        },\n        publish = function (orbit) {\n            var args,\n                len;\n\n            // undefined check\n            if (!orbits[orbit]) {\n                return false;\n            }\n\n            args = Array.prototype.slice.call(arguments);\n            len = orbits[orbit].length;\n\n            for (var i = 0;i < len;i++) {\n                var subscription = orbits[orbit][i];\n                subscription.callback.apply(subscription.context, args);\n            }\n\n            // chain pattern\n            return this;\n        },\n        unsubscribe = function (token) {\n            for (var m in orbits) {\n                if (orbits[m]) {\n                    for (var i = 0, j = orbits[m].length; i < j; i++) {\n                        if (orbits[m][i].token === token) {\n                            orbits[m].splice(i, 1);\n                            return token;\n                        }\n                    }\n                }\n            }\n            return false;\n        };\n\n        return {\n            subscribe: subscribe,\n            publish: publish,\n            unsubscribe: unsubscribe,\n        };\n}(window, document));\n"],"sourceRoot":"/source/"}