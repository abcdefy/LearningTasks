{"version":3,"names":[],"mappings":"","sources":["main.js"],"sourcesContent":["/*\n    logger - 向右侧信息台输出信息\n    pattern - singleton\n */\nvar logger = (function(global, doc, undef) {\n    function _log(msg) {\n        if (msg) {\n            $('.logger-list').last().append('<li \"class=\"logger-list-item\"> - ' + new Date() + ': ' + msg + ' - </li>');\n        }\n    }\n\n    return {\n        log: _log\n    };\n}(window, document));\n\n/**\n * mediator - 中介者，负责传送指令\n */\nvar mediator = (function ( global, doc, undef ) {\n    var orbits = {},\n        subUid = -1,\n\n        subscribe = function (orbit, func ) {\n            var token;\n\n            if (!orbits[orbit]) {\n                orbits[orbit] = [];\n            }\n\n    \t\t// add observer to observerlist(orbits)\n            token = (++subUid).toString();\n            orbits[orbit].push({\n                context: this,\n                orbit: orbit,\n                token: token,\n                callback: func\n            });\n\n            return token;\n        },\n        publish = function (orbit) {\n            var args,\n                len;\n\n            // undefined check\n            if (!orbits[orbit]) {\n                return false;\n            }\n\n            args = Array.prototype.slice.call(arguments);\n            len = orbits[orbit].length;\n\n            for (var i = 0;i < len;i++) {\n                var subscription = orbits[orbit][i];\n                subscription.callback.apply(subscription.context, args);\n            }\n\n            // chain pattern\n            return this;\n        },\n        unsubscribe = function (token) {\n            for (var m in orbits) {\n                if (orbits[m]) {\n                    for (var i = 0, j = orbits[m].length; i < j; i++) {\n                        if (orbits[m][i].token === token) {\n                            orbits[m].splice(i, 1);\n                            return token;\n                        }\n                    }\n                }\n            }\n            return false;\n        };\n\n        return {\n            subscribe: subscribe,\n            publish: publish,\n            unsubscribe: unsubscribe,\n        };\n}(window, document));\n\n/**\n *  spaceship prototype\n */\nfunction spaceship(orbit) {\n    var obj = {\n        isFly: falsem,\n        isGone: false,\n        leftEnergy: 100,\n        flySpeed: 1,\n        restoreSpeed: 5,\n        consumeSpeed: 10,\n        angle: 0,\n\n        driveSys: {\n            launch: function () {\n                if (obj.energy > 0) {\n                    obj.isFly = true;\n                }\n            },\n            stop: function () {\n                obj.isFly = false;\n            },\n            fly: function () {\n                if (obj.isFly) {\n                    obj.angle += obj.speed;\n                }\n                obj.angle %= 360;\n            }\n        },\n\n        energySys: {\n            restore: function () {\n                if (!obj.isFly) {\n                    obj.energy += obj.restoreSpeed;\n                }\n                if (obj.energy > 100) {\n                    obj.energy = 100;\n                }\n            },\n            consume: function () {\n                if (obj.isFly) {\n                    obj.energy -= obj.consumeSpeed;\n                }\n                if (obj.energy <= 0) {\n                    obj.isFly = false;\n                    obj.energy = 0;\n                }\n            }\n        },\n\n        destroySys: {\n            destroy: function () {\n                obj.isGone = true;\n                $('#ship' + obj.orbit).remove();\n            }\n        },\n\n        transferSys: {\n            messageReceiver: function (orbit, msg) {\n                switch (msg.command) {\n                    case 'launch':\n                        obj.driveSys.launch();\n                        break;\n                    case 'stop':\n                        obj.driveSys.stop();\n                        break;\n                    case 'rate':\n                        obj.flySpeed = msg.value;\n                        break;\n                    case 'destory':\n                        obj.destroySys.destroy();\n                        break;\n                    default:\n                        logger.log('错误指令!');\n                        break;\n                }\n            }\n        }\n    };\n\n    return obj;\n}\n\n/**\n * commander - 指挥官\n */\nvar commander = (function (global, doc, undef) {\n    var commandList = ['launch', 'stop', 'rate', 'destroy'];\n\n    $('.panel-list-item').click(function (e) {\n        var event = e || window.event,\n            target = event.target || event.srcElement;\n\n            console.log(target.innerHTML);\n\n        if (target.nodeName.toLowerCase() == \"button\") {\n            console.log(target.innerHTML);\n        }\n    });\n\n    function _create() {\n\n    }\n\n    return {\n        create: _create\n    };\n}(window, document));\n\n(function (global, doc, undef) {\n    logger.log('test for logger');\n}(window, document));\n"],"file":"main.min.js","sourceRoot":"/source/"}