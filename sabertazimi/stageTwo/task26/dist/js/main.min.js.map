{"version":3,"names":[],"mappings":"","sources":["main.js"],"sourcesContent":["/*\n    logger - 向右侧信息台输出信息\n    pattern - singleton\n */\nvar logger = (function(global, doc, undef) {\n    function _log(msg) {\n        if (msg) {\n            setTimeout(function(){\n                $('.logger-list').last().append('<li \"class=\"logger-list-item\"> - ' + new Date() + ': ' + msg + ' - </li>');\n            }, 500);\n        }\n    }\n    return {\n        log: _log\n    };\n}(window, document));\n\n/**\n * mediator - 中介者，负责传送指令\n */\nvar mediator = (function ( global, doc, undef ) {\n    var orbits = {},\n        subUid = -1,\n\n        subscribe = function (orbit, obj ) {\n            var token;\n\n            if (!orbits[orbit]) {\n                orbits[orbit] = [];\n            }\n\n    \t\t// add observer to observerlist(orbits)\n            token = (++subUid).toString();\n            orbits[orbit].push({\n                context: obj,\n                orbit: orbit,\n                token: token,\n                callback: obj.transferSys.messageReceiver\n            });\n\n            return token;\n        },\n        publish = function (orbit) {\n            var args,\n                len;\n\n            // undefined check\n            if (!orbits[orbit]) {\n                return false;\n            }\n\n            args = Array.prototype.slice.call(arguments);\n            len = orbits[orbit].length;\n\n            for (var i = 0;i < len;i++) {\n                var subscription = orbits[orbit][i];\n                subscription.callback.apply(subscription.context, args);\n            }\n\n            // chain pattern\n            return this;\n        },\n        unsubscribe = function (token) {\n            for (var m in orbits) {\n                if (orbits[m]) {\n                    for (var i = 0, j = orbits[m].length; i < j; i++) {\n                        if (orbits[m][i].token === token) {\n                            orbits[m].splice(i, 1);\n                            return token;\n                        }\n                    }\n                }\n            }\n            return false;\n        };\n\n        return {\n            subscribe: subscribe,\n            publish: publish,\n            unsubscribe: unsubscribe,\n        };\n}(window, document));\n\n/**\n *  spaceship  factory\n */\nvar shipFactory = (function (global, doc, undef) {\n\n    // spaceship prototype\n    function spaceship(options) {\n        var obj = {\n            orbit: options.orbit || 0,\n            isFly: false,\n            isGone: false,\n            leftEnergy: 100,\n            flySpeed: options.flySpeed || 1,\n            restoreSpeed: options.restoreSpeed || 5,\n            consumeSpeed: options.consumeSpeed || 3,\n            angle: 0,\n            // interval animation id\n            launchId: 0,\n            stopId: 0,\n\n            driveSys: {\n                launch: function () {\n                    if (obj.leftEnergy > 0) {\n                        obj.isFly = true;\n                        clearInterval(obj.launchId);\n                        clearInterval(obj.stopId);\n                        obj.launchId = setInterval(function(){\n                            obj.driveSys.fly();\n                            obj.energySys.consume();\n                        }, 200);\n                    }\n                },\n                stop: function () {\n                    obj.isFly = false;\n                    clearInterval(obj.launchId);\n                    clearInterval(obj.stopId);\n                    obj.stopId = setInterval(function(){\n                        obj.energySys.restore();\n                    }, 200);\n                },\n                fly: function () {\n                    if (obj.isFly) {\n                        obj.angle += obj.flySpeed;\n                    }\n                    obj.angle %= 360;\n                    $('#ship' + obj.orbit).css('transform', 'rotate(' + obj.angle + 'deg)');\n                }\n            },\n\n            energySys: {\n                restore: function () {\n                    if (!obj.isFly) {\n                        obj.leftEnergy += obj.restoreSpeed;\n                    }\n                    if (obj.leftEnergy > 100) {\n                        obj.leftEnergy = 100;\n                    }\n                    $('#ship' + obj.orbit).text(obj.leftEnergy + '%');\n                },\n                consume: function () {\n                    if (obj.isFly) {\n                        obj.leftEnergy -= obj.consumeSpeed;\n                    }\n                    if (obj.leftEnergy <= 0) {\n                        obj.isFly = false;\n                        obj.leftEnergy = 0;\n                        clearInterval(obj.launchId);\n                        clearInterval(obj.stopId);\n                        obj.stopId = setInterval(function(){\n                            obj.energySys.restore();\n                        }, 200);\n                    }\n                    $('#ship' + obj.orbit).text(obj.leftEnergy + '%');\n                }\n            },\n\n            destroySys: {\n                destroy: function () {\n                    obj.isGone = true;\n                    setTimeout(function () {\n                        $('#ship' + obj.orbit).remove();\n                    }, 200);\n                }\n            },\n\n            transferSys: {\n                messageReceiver: function (orbit, msg) {\n                    switch (msg.command) {\n                        case 'launch':\n                            obj.driveSys.launch();\n                            break;\n                        case 'stop':\n                            obj.driveSys.stop();\n                            break;\n                        case 'rate':\n                            obj.flySpeed = msg.flySpeed;\n                            break;\n                        case 'destroy':\n                            obj.destroySys.destroy();\n                            break;\n                    }\n                }\n            }\n        };\n\n        return obj;\n    }\n\n    function _create(options) {\n        if (typeof options === 'object') {\n            var obj = new spaceship(options);\n            //  开始监测指挥官发来的信号\n            mediator.subscribe(obj.orbit, obj);\n            setTimeout(function () {\n                $('.space').append('<button class=\"spaceship\" type=\"button\" id=\"ship' + obj.orbit + '\">100%</button>');\n            }, 200);\n            return obj;\n        }\n    }\n\n    return {\n        create: _create\n    };\n\n}(window, document));\n\n/**\n * commander - 指挥官\n */\nvar commander =  (function (global, doc, undef) {\n    var commandList = {\n        launch: {\n            id: 1,\n            command: 'launch'\n        },\n        stop: {\n            id: 2,\n            command: 'stop'\n        },\n        rate: {\n            id: 3,\n            command: 'rate',\n            flySpeed: 1,\n        },\n        destroy: {\n            id: 4,\n            command: 'destroy'\n        }\n    },\n    existShip = [false, false, false ,false];\n\n    function _getList() {\n        return commandList;\n    }\n\n    function _set(index) {\n        existShip[index] = true;\n    }\n\n    function _remove(index) {\n        existShip[index] = false;\n    }\n\n    function _get(index) {\n        return existShip[index];\n    }\n\n    function _send(orbit, msg) {\n        if(Math.random() <= 0.3) {\n            logger.log(\"向轨道\" + (orbit + 1) + \"发送的 \" + msg.command + \" 指令发生未知错误！\");\n            return false;\n        } else {\n            logger.log(\"向轨道\" + (orbit + 1) + \"成功发送 \" + msg.command + \" 指令！\");\n            mediator.publish(orbit, msg);\n            return true;\n        }\n    }\n\n    return {\n        getCommandList: _getList,\n        setState: _set,\n        removeState: _remove,\n        getState: _get,\n        sendMessage: _send\n    };\n}(window, document, undefined));\n\n(function (global, doc, undef) {\n    // 利用事件委托绑定回调\n    $('.panel-list').click(function (e) {\n        var event = e || window.event,\n            target = event.target || event.srcElement,\n            $target = $(target),\n            index = $target.parent().index(),\n            cmdList = commander.getCommandList(),\n            rateCmd = {},\n            msgState = false;\n\n        function stateCheck(index) {\n            if (!commander.getState(index)) {\n                logger.log(\"向轨道\" + (index + 1) + \"发送的 \" + $target.attr('class') + \" 指令发生未知错误！\");\n                return false;\n            } else {\n                return true;\n            }\n        }\n\n        if (target.nodeName.toLowerCase() == \"button\") {\n            switch ($target.attr('class')) {\n                case 'create':\n                    if (!commander.getState(index)) {\n                        shipFactory.create({orbit: index});\n                        commander.setState(index);\n                        logger.log((index + 1) + '号飞船创建成功');\n                    }\n                    break;\n                case 'launch':\n                    if (stateCheck(index)) {\n                        commander.sendMessage(index, cmdList.launch);\n                    }\n                    break;\n                case 'stop':\n                    if (stateCheck(index)) {\n                        commander.sendMessage(index, cmdList.stop);\n                    }\n                    break;\n                case 'rate':\n                    if (stateCheck(index)) {\n                        rateCmd = Object.create(cmdList.rate);\n                        rateCmd.flySpeed = parseInt($target.parent().children('input').val());\n                        commander.sendMessage(index, rateCmd);\n                    }\n                    break;\n                case 'destroy':\n                    if (stateCheck(index)) {\n                        msgState = commander.sendMessage(index, cmdList.destroy);\n                        if (msgState) {\n                            commander.removeState(index);\n                        }\n                    }\n                    break;\n            }\n        }\n    });\n}(window, document));\n"],"file":"main.min.js","sourceRoot":"/source/"}