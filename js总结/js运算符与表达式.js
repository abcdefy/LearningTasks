// 十种运算符
// 1.一元运算符(++,--)
	var age = 20;
	age++;//先运算，后加1
	++age;//先加1，后运算
// 2.算术运算符(+-*/%)
	表示正负的时候是一元运算符
// 3.关系运算符(>,<,>=,<=)
	返回值为boolean类型
// 4.相等运算符(==,!=,===,!==)
	返回值也是boolean类型，相等运算符时会发生类型转换。
	var num = "4";
	num == 4;//返回值为true，字符会转换为number
	0 == false;//true,false会转换为0，true为1
	0 == "";//空字符串会转换为0
	===为全等运算符，不同类型的值不会发生类型转换，为false
// 5.逻辑运算符(!,&&,||)
	!逻辑非，取操作数的bool值的非
	!0;//true
	![];//false,空的数组为true
	!"";//true
	!![];//true,对一个操作数连续取反，得到这个操作数的bool值
	逻辑与&&
	若第一个数的bool值为真，结果会取第二个数
	若第一个数的bool值为假，结果会取第一个数
	var result = ""&&3;//""
	var result = ""&&num++;//会短路，num没有++
	逻辑或||
	与逻辑与相反
	也会短路
	若第一个数的bool值为真，结果会取第一个数
	若第一个数的bool值为假，结果会取第二个数
	var result = []||"";//[]
// 6.赋值运算符=
	num = num + 5;
	num += 5;
	一样，其他的也可以这样复合赋值
// 7.条件运算符(?:)
	result = num1>num2? num1:num2;
	双份支选择结构
// 8.逗号运算符(,)
	在一个语句里执行多个操作
	var num1 = 5,num2 = 3;
// 9.6大对象运算符(new,delete,.,[],instanceof,in)
	var cat = new Object();//获取一个新的对象实例
	delete cat.name;//删除对象中的一个属性
	cat.name;
	cat['name'];//.和[]用来获取对象的属性值
	cat instanceof Object;//判断实例是不是一个基本类型的实例，返回值为bool型
	'name' in cat;//判断一个属性是否在实例对象中，返回值也是bool型
// 10,位运算符(~,&,|,^,<<,>>,>>>)
	&:按位与
	var num = 8;
	num &4;//0，会把num和4先转换为32位2进制数，然后按位取与运算，对应位置有0为0，全1为1
	<<:左移
	var num = 2;
	num<<2;//4,把2换成2进制，向前移两位(*2*2)
// 优先级
	一元运算符优先级最高，算术运算符其次，优先级相同，从左往右计算
// 表达式
	操作数加运算符
